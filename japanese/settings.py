"""
Django settings for japanese project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os, sys, os.path
from decouple import config

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

PROJECT_ROOT = os.path.dirname(__file__)
sys.path.insert(0, os.path.join(PROJECT_ROOT, 'apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', cast = bool)

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'grappelli',        #Интерфейс админки
    'chartjs',      #Графики
    'ckeditor',     #Инструменты
    'ckeditor_uploader',        
    'django_tables2',       #для отчетности (не работает?)
    'django_jinja',
    'django_filters',
    'widget_tweaks',
    'channels',
    'chat',
    'articles.apps.ArticlesConfig',
    'lessons.apps.LessonsConfig',
    'mainApp.apps.MainappConfig',
    'users.apps.UsersConfig',
    'crispy_forms',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'japanese.urls'

TEMPLATES = [
    # {
    #     "BACKEND": "django_jinja.backend.Jinja2",
    #     "APP_DIRS": True,
    #     "OPTIONS": {
    #         # Match the template names ending in .html but not the ones in the admin folder.
    #         "match_extension": ".html",
    #         "match_regex": r"^(?!admin/).*",
    #         "app_dirname": "templates",

    #         # Can be set to "jinja2.Undefined" or any other subclass.
    #         "undefined": None,

    #         "newstyle_gettext": True,
    #         # "tests": {
    #         #     "mytest": "path.to.my.test",
    #         # },
    #         # "filters": {
    #         #     "myfilter": "path.to.my.filter",
    #         # },
    #         # "globals": {
    #         #     "myglobal": "path.to.my.globalfunc",
    #         # },
    #         "constants": {
    #             "foo": "bar",
    #         },
    #         "extensions": [
    #             "jinja2.ext.do",
    #             "jinja2.ext.loopcontrols",
    #             "jinja2.ext.with_",
    #             "jinja2.ext.i18n",
    #             "jinja2.ext.autoescape",
    #             "django_jinja.builtins.extensions.CsrfExtension",
    #             "django_jinja.builtins.extensions.CacheExtension",
    #             "django_jinja.builtins.extensions.DebugExtension",
    #             "django_jinja.builtins.extensions.TimezoneExtension",
    #             "django_jinja.builtins.extensions.UrlsExtension",
    #             "django_jinja.builtins.extensions.StaticFilesExtension",
    #             "django_jinja.builtins.extensions.DjangoFiltersExtension",
    #         ],
    #         "bytecode_cache": {
    #             "name": "default",
    #             "backend": "django_jinja.cache.BytecodeCache",
    #             "enabled": False,
    #         },
    #         "autoescape": True,
    #         "auto_reload": True,
    #         "translation_engine": "django.utils.translation",
    #     }
    # },
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(PROJECT_ROOT, 'templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request'
            ],
        },
    },
]

WSGI_APPLICATION = 'japanese.wsgi.application'

ASGI_APPLICATION = "japanese.asgi.application"
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'OPTIONS': {
        		'options': '-c search_path=websys'
        },
        'NAME': config("DATABASE_NAME"),
        'USER': config("DATABASE_USERNAME"),
        'PASSWORD': config("DATABASE_PASSWORD"),
        'HOST': config("DATABASE_HOST"),
        'PORT': config("DATABASE_PORT", cast = int),
    }
}



# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': [
            ['Undo', 'Redo',
             '-', 'Bold', 'Italic', 'Underline',
             '-', 'Link', 'Unlink', 'Anchor',
             '-', 'Format',
             '-', 'Maximize',
             '-', 'Table',
             '-', 'Image',
             '-', 'Source',
             '-', 'NumberedList', 'BulletedList'
            ],
            ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock',
             '-', 'Font', 'FontSize', 'TextColor',
             '-', 'Outdent', 'Indent',
             '-', 'HorizontalRule',
             '-', 'Blockquote'
            ]
        ],
        'height': 500,
        'width': '100%',
        'toolbarCanCollapse': False,
        'forcePasteAsPlainText': True
    }
}


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'ru-RU'

TIME_ZONE = 'Asia/Novosibirsk'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

STATIC_DIR = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [STATIC_DIR]

# STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

CKEDITOR_UPLOAD_PATH = "uploads/"

CRISPY_TEMPLATE_PACK = 'bootstrap4'

LOGIN_REDIRECT_URL = 'mainApp:index'
LOGIN_URL = 'login'

# TORTOISE_INIT = {
#     "db_url": "postgres://postgres:29t7hkpg737@db.localhost:5432/examplet",
#     "modules" : {
#         "models": ["chat.tortoise_models", "aerich.models"]
#      }
# }